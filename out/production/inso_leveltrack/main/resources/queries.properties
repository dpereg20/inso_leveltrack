# Queries para Login
user.findByEmailAndPassword=SELECT * FROM Users WHERE email = ? AND password = ?

# Queries para Usuarios
user.findById=SELECT id, name, email, role, password FROM Users WHERE id = ?
user.findAll=SELECT * FROM Users
user.insert=INSERT INTO Users (name, email, password, role) VALUES (?, ?, SHA2(?, 256), ?)
user.update=UPDATE Users SET name = ?, email = ?, password = ?, role = ? WHERE id = ?
user.delete=DELETE FROM Users WHERE id = ?
user.updateProfile=UPDATE Users SET name = ?, email = ?, password = SHA2(?, 256) WHERE id = ?
user.updateRole=UPDATE Users SET role = ? WHERE id = ?
user.emailExists=SELECT id FROM Users WHERE email = ?

library.updateGameState=UPDATE Games SET state = ? WHERE id = ?


# Queries para Juegos
game.findById=SELECT * FROM Games WHERE id = ?
game.findByCriteria=SELECT * FROM Games WHERE genre = ?
game.update=UPDATE Games SET name = ?, genre = ?, price = ?, status = ? WHERE id = ?
game.delete=DELETE FROM Games WHERE id = ?

game.add=INSERT INTO Games (name, genre, price) VALUES (?, ?, ?)
game.existsByName=SELECT 1 FROM Games WHERE name = ?
game.findByName=SELECT id, name, genre, price FROM Games WHERE name = ?


# Queries para Bibliotecas
# Retrieve all games from the database
game.findAll=SELECT id, name, genre, price FROM Games ORDER BY name ASC

# Retrieve games by genre
game.findByGenre=SELECT id, name, genre, price FROM Games WHERE genre = ? ORDER BY name ASC

# Retrieve user library games
library.findByUserId=SELECT g.id, g.name, g.genre, g.price FROM LibraryGames lg JOIN Games g ON lg.game_id = g.id WHERE lg.library_id = ?

# Check if a game is in the user's library
library.isGameInLibrary=SELECT 1 FROM LibraryGames WHERE library_id = ? AND game_id = ?



library.getGamesByUserId=SELECT g.id, g.name, g.genre, g.price \
FROM Games g \
JOIN LibraryGames lg ON g.id = lg.game_id \
JOIN Libraries l ON lg.library_id = l.id \
WHERE l.user_id = ?

library.addGameToLibrary=INSERT INTO LibraryGames (library_id, game_id) VALUES (?, ?)

library.addGame=INSERT INTO Games (name, genre, price, library_id) VALUES (?, ?, ?, ?)
library.removeGame=DELETE FROM Games WHERE id = ? AND library_id = ?
library.findGame=SELECT * FROM Library_Games WHERE library_id = ? AND game_id = ?

# Queries para Amistades
friendship.searchUsers=SELECT id, name, email, role FROM Users WHERE name LIKE ? OR email LIKE ?
friendship.sendRequest=INSERT INTO Friendships (requester_id, receiver_id, status) VALUES (?, ?, ?)
friendship.getRequests=SELECT id, requester_id, receiver_id, status FROM Friendships WHERE receiver_id = ?
friendship.updateStatus=UPDATE Friendships SET status = ? WHERE id = ?
friendship.getFriends=SELECT DISTINCT u.id, u.name, u.email, u.role FROM Users u JOIN Friendships f ON (u.id = f.requester_id OR u.id = f.receiver_id) WHERE f.status = 'Accepted' AND (f.requester_id = ? OR f.receiver_id = ?) AND u.id != ?



# Queries para Rese√±as
review.findByGameId=SELECT * FROM Reviews WHERE game_id = ?
review.insert=INSERT INTO Reviews (comment, rating, user_id, game_id) VALUES (?, ?, ?, ?)
review.delete=DELETE FROM Reviews WHERE id = ?
