# Queries para Login
user.findByEmailAndPassword=SELECT * FROM Users WHERE email = ? AND password = SHA2(?, 256)


# Queries para Usuarios
user.findById=SELECT id, name, email, role, password FROM Users WHERE id = ?
user.findAll=SELECT * FROM Users
user.insert=INSERT INTO Users (name, email, password, role) VALUES (?, ?, SHA2(?, 256), ?)
user.delete=DELETE FROM Users WHERE id = ?
user.updateProfile=UPDATE Users SET name = ?, email = ?, password = ? WHERE id = ?
user.updateRole=UPDATE Users SET role = ? WHERE id = ?
user.emailExists=SELECT id FROM Users WHERE email = ?


# Queries para Juegos
game.add=INSERT INTO Games (name, genre, price) VALUES (?, ?, ?)
game.existsByName=SELECT 1 FROM Games WHERE name = ?
game.findByName=SELECT id, name, genre, price FROM Games WHERE name = ?
game.addGame=INSERT INTO Games (name, genre, price) VALUES (?, ?, ?);
game.updateGame=UPDATE Games SET name = ?, genre = ?, price = ? WHERE id = ?;
game.deleteGame=DELETE FROM Games WHERE id = ?;
game.getGameByName=SELECT id, name, genre, price FROM Games WHERE name = ?;
game.findAll=SELECT id, name, genre, price FROM Games ORDER BY name ASC


# Queries para Puntuaciones
library.updateGameScore=UPDATE LibraryGames SET game_score = ? WHERE game_id = ? AND user_id = ? AND library_id = ?
library.getGameScore=SELECT game_score FROM LibraryGames WHERE game_id = ? AND user_id = ? AND library_id = ?
library.insert=INSERT INTO Libraries (user_id) VALUES (?);
library.isGameInLibrary=SELECT 1 FROM LibraryGames WHERE library_id = ? AND game_id = ?;
library.getGamesByUserId=SELECT g.id, g.name, g.genre, g.price, lg.state, lg.game_score \
FROM LibraryGames lg \
JOIN Games g ON lg.game_id = g.id \
WHERE lg.library_id = (SELECT id FROM Libraries WHERE user_id = ?);
library.getGamesByGenreUser=SELECT g.id AS id, g.name, g.genre, g.price, lg.state, lg.game_score \
FROM LibraryGames lg \
JOIN Games g ON lg.game_id = g.id \
WHERE lg.user_id = ? AND g.genre LIKE ?
library.addGame=INSERT INTO LibraryGames (library_id, user_id, game_id, state, game_score) VALUES (?, ?, ?, ?, ?);
library.removeGame=DELETE FROM LibraryGames WHERE library_id = ? AND game_id = ?;
library.updateGameState=UPDATE LibraryGames SET state = ? WHERE game_id = ? AND user_id = ?;
library.getLibraryIdByUserId=SELECT id FROM Libraries WHERE user_id = ?;
library.getAllGenres=SELECT DISTINCT genre FROM Games;
library.getGamesByGenre=SELECT id, name, genre, price FROM Games WHERE genre LIKE ?;


# Queries para Amistades
friendship.searchUsers=SELECT id, name, email, role FROM Users WHERE id = ?;
friendship.getUserIdByUserEmail=SELECT id FROM Users WHERE email = ?;
friendship.getFriends=SELECT u.id, u.name, u.email, u.role \
FROM Friendships f \
JOIN Users u ON (f.requester_id = u.id OR f.receiver_id = u.id) \
WHERE (f.requester_id = ? OR f.receiver_id = ?) AND f.status = 'Accepted' AND u.id != ?;
friendship.sendRequest=INSERT INTO Friendships (requester_id, receiver_id, status) VALUES (?, ?, ?);
friendship.getRequests=SELECT id, requester_id, receiver_id, status FROM Friendships WHERE receiver_id = ? AND status = 'Pending';
friendship.updateStatus=UPDATE Friendships SET status = ? WHERE id = ?;
friendship.checkFriendship=SELECT 1 FROM Friendships WHERE \
((requester_id = ? AND receiver_id = ?) OR (requester_id = ? AND receiver_id = ?)) \
AND status = 'Accepted'
friendship.checkPendingRequest=SELECT 1 FROM Friendships WHERE \
((requester_id = ? AND receiver_id = ?) OR (requester_id = ? AND receiver_id = ?)) \
AND status = 'Pending'
friendship.deleteFriend = DELETE FROM Friendships \
WHERE (requester_id = ? AND receiver_id = ?) \
OR (requester_id = ? AND receiver_id = ?);